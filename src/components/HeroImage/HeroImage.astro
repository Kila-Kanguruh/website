---
interface Props {
  text: string;
}

const { text } = Astro.props;
const hasGraphic = Astro.slots.default;
---

<section class=`hero-image ${!hasGraphic && 'no-graphic'}`>
  <div class="hero-content">
    <div class="hero-text">
      <h1>{text}</h1>
    </div>
    {
      hasGraphic && (
        <div class="hero-graphic">
          <slot />
        </div>
      )
    }
  </div>
</section>

<style>
  .hero-image {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: relative;
  }

  .hero-image.no-graphic {
    height: unset;
  }

  .hero-content {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
    position: relative;
  }

  .hero-text {
    width: 60%;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: 2rem;
    position: relative;
    z-index: 2; /* Ensure text is above the graphic */
  }

  .hero-text h1 {
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.2;
    color: var(--kila-text-primary, #333);
    margin-right: -5%; /* Create overlap with graphic */
  }

  .hero-graphic {
    width: 60%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    position: relative;
    z-index: 1;
    margin-left: -10%; /* Create overlap with text */
  }

  .hero-graphic :global(img) {
    max-width: 100%;
    max-height: 100%;
  }

  @media (max-width: 768px) {
    .hero-image {
      height: 70vh;
    }

    .hero-image.hero-image.no-graphic {
      height: unset;
    }

    .hero-content {
      flex-direction: column;
    }

    .hero-text,
    .hero-graphic {
      width: 100%;
      justify-content: center;
      margin: 0;
    }

    .hero-text {
      height: 60%;
      padding-bottom: 0;
    }

    .hero-graphic {
      height: 60%;
      margin-top: -20%; /* Create vertical overlap on mobile */
    }

    .hero-text h1 {
      font-size: 2.5rem;
      text-align: center;
      margin-right: 0;
    }
  }
</style>
