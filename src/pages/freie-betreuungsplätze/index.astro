---
import HeroImage from "../../components/HeroImage/HeroImage.astro";
import Layout from "../../layouts/Layout.astro";
import Banner from "../../components/Banner/Banner.astro";
import { getCollection } from "astro:content";

const freieBetreuungsplaetzeItems = await getCollection(
  "freieBetreuungsplaetze"
);

const { title, titleimage, callout1, callout2, footer } =
  freieBetreuungsplaetzeItems[0].data.freieBetreuungsplaetze;
const callouts = [callout1, callout2];
---

<Layout
  title={title ?? ""}
  instagram="https://www.instagram.com/kila_kaenguruh/"
>
  <HeroImage slot="hero" text={title ?? ""}>
    <img src={titleimage?.node.sourceUrl} alt={titleimage?.node.altText} />
  </HeroImage>

  {
    callouts.map((callout) => {
      if (!callout.show) {
        return null;
      }

      return (
        <>
          <h2>{callout.title}</h2>
          <Banner title={callout.heading ?? ""}>{callout.content}</Banner>
        </>
      );
    })
  }

  <p set:html={footer} />
</Layout>

<style is:global>
  form {
    display: flex;
    flex-direction: column;
  }

  label {
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
    text-align: center;
  }

  select {
    background-color: white;
  }

  small {
    margin-top: 1rem;
    text-align: center;
  }

  form .footer {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .children-container {
    margin: 2rem 0;
    text-align: center;
  }

  .children-container h3 {
    margin-bottom: 1rem;
  }

  .child-entry {
    display: flex;
    gap: 1rem;
    margin-bottom: 3rem;
    align-items: center;
    text-align: center;
  }

  @media screen and (max-width: 650px) {
    .child-entry {
      flex-direction: column;
    }
  }

  .child-entry select,
  .child-entry input {
    flex: 1;
    padding: 1rem;
    border: 3px solid var(--kila-accent);
    background-color: white;
  }

  .child-entry select:invalid,
  .child-entry input:invalid {
    border: 3px solid red;
  }
  .remove-child {
    background: none;
    color: red;
    cursor: pointer;
    font-size: 1.5rem;
    padding: 0.8rem;
    margin-left: 0.5rem;
    border: 3px solid red;
    flex-grow: 0.1;
  }

  @media screen and (max-width: 650px) {
    .child-entry input {
      width: calc(100% - 2rem);
    }
    .child-entry select {
      width: 100%;
    }

    .remove-child {
      margin-left: none;
      padding: 0.8rem 2rem;
    }
  }
</style>

<script>
  let numberOfKids = 0;

  function toggleButtonDisabled() {
    const addChildBtn = document.getElementById("add-child");

    if (addChildBtn && addChildBtn instanceof HTMLButtonElement) {
      addChildBtn.disabled = numberOfKids === 3;
    }
  }

  function createChildEntry() {
    numberOfKids++;
    toggleButtonDisabled();
    const childEntry = document.createElement("div");
    childEntry.className = "child-entry";

    const style = document.createElement("style");
    style.innerHTML = `
    select {
      border: 2px solid red;
    }
    `;

    const genderSelect = document.createElement("select");
    genderSelect.name = `child-gender_${numberOfKids}`;
    genderSelect.required = true;
    genderSelect.innerHTML = `
      <option value="">Geschlecht auswählen</option>
      <option value="m">männlich</option>
      <option value="w">weiblich</option>
      <option value="d">divers</option>
    `;

    const ageInput = document.createElement("input");
    ageInput.type = "date";
    ageInput.name = `child-age_${numberOfKids}`;
    ageInput.placeholder = "Geburtstag";
    ageInput.required = true;

    const removeButton = document.createElement("button");
    removeButton.type = "button";
    removeButton.className = "remove-child";
    removeButton.innerHTML = "×";
    removeButton.onclick = () => {
      numberOfKids--;
      toggleButtonDisabled();
      childEntry.remove();
    };

    childEntry.appendChild(genderSelect);
    childEntry.appendChild(ageInput);
    childEntry.appendChild(removeButton);

    return childEntry;
  }

  document.addEventListener("DOMContentLoaded", () => {
    const addChildButton = document.getElementById("add-child");
    const childrenList = document.getElementById("children-list");

    addChildButton?.addEventListener("click", () => {
      const childEntry = createChildEntry();
      childrenList?.appendChild(childEntry);
    });
  });
</script>
